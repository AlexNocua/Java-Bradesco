package edu.estudo.plavrasReservadas;

public class PalavrasReservadas {
    public static void main(String[] args) {
        // ğŸ”¹ 1. Palavras de controle de fluxo
        // Usadas em estruturas condicionais e de repetiÃ§Ã£o.
        
        // if, else
        
        // switch, case, default
        
        // while, do, for
        
        // break, continue
        
        // return
        
        // ğŸ”¹ 2. Modificadores de acesso e classe
        // Controlam a visibilidade e comportamento de classes e mÃ©todos.
        
        // public, private, protected
        
        // static, final, abstract
        
        // class, interface, enum
        
        // extends, implements
        
        // ğŸ”¹ 3. Controle de erro e exceÃ§Ãµes
        // try, catch, finally
        
        // throw, throws
        
        // ğŸ”¹ Palavras relacionadas Ã  heranÃ§a e objetos
        // this â€“ referÃªncia ao objeto atual
        
        // super â€“ referÃªncia Ã  superclasse
        
        // new â€“ criaÃ§Ã£o de objeto
        
        // instanceof â€“ teste de tipo
        
        // ğŸ”¹ Palavras relacionadas a tipos e valores
        // Tipos primitivos: int, long, short, byte, float, double, char, boolean
        
        // Literais: true, false, null
        
        // void â€“ retorno vazio de mÃ©todo
        
        // ğŸ”¹ Palavras de controle de thread e sincronizaÃ§Ã£o
        // synchronized
        
        // volatile
        
        // transient â€“ ignora campo na serializaÃ§Ã£o
        
        // native â€“ mÃ©todo implementado em cÃ³digo nativo
        
        // ğŸ”¹ Outras palavras reservadas importantes
        // package â€“ define o pacote
        
        // import â€“ importa classes de outros pacotes
        
        // default â€“ usado em switch e interfaces
        
        // strictfp â€“ para consistÃªncia de ponto flutuante
        
        // assert â€“ para testes de afirmaÃ§Ã£o
        
        // ğŸ”¸ Palavras reservadas para uso futuro (nÃ£o utilizadas ainda)
        // const (Java usa final)
        
        // goto (nÃ£o implementado por boas prÃ¡ticas)
        
         
    }
}
